{"ast":null,"code":"var _jsxFileName = \"/Users/niwa_kazuhiro/Documents/PrivateDevelop/win-rate-react19/src/SubmitForm.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useOptimistic, useState, useRef } from \"react\";\nimport { useFormStatus } from \"react-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UsernameForm() {\n  _s();\n  const {\n    pending,\n    data\n  } = useFormStatus();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Submit  Name: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      disabled: pending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: pending,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data ? `Submitting ${data === null || data === void 0 ? void 0 : data.get(\"name\")}...` : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n// deliverName関数の引数と戻り値の型を定義\n_s(UsernameForm, \"J/2Wr/H+PRkFQJ5+36sW4Xec7aE=\", false, function () {\n  return [useFormStatus];\n});\n_c = UsernameForm;\nasync function deliverName(name) {\n  await new Promise(res => setTimeout(res, 1000));\n  return name;\n}\n\n// Threadコンポーネントのpropsに型を追加\n\nfunction Thread({\n  names,\n  sendName\n}) {\n  _s2();\n  const formRef = useRef(null);\n\n  // formActionの引数の型をFormDataに設定\n  async function formAction(formData) {\n    var _formRef$current;\n    addOptimisticName(formData.get(\"name\")); // 名前を文字列として扱う\n    (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.reset();\n    await sendName(formData);\n  }\n\n  // optimisticNamesとaddOptimisticNameに型を付ける\n  const [optimisticNames, addOptimisticName] = useOptimistic(names, (state, newName) => [...state, {\n    text: newName,\n    sending: true\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [optimisticNames.map((name, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [name.text, !!name.sending && /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \" (Sending...)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 30\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: formAction,\n      ref: formRef,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Hello!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n// SubmitForm  コンポーネントのstateとsendName関数の型を追加\n_s2(Thread, \"vsyMHlx8E0bi7/LCNRey0yO3QRY=\", false, function () {\n  return [useOptimistic];\n});\n_c2 = Thread;\nexport function SubmitForm() {\n  _s3();\n  const [names, setNames] = useState([{\n    text: \"Hello there!\",\n    sending: false,\n    key: 1\n  }]);\n  async function sendName(formData) {\n    const sentName = await deliverName(formData.get(\"name\"));\n    setNames(names => [...names, {\n      text: sentName,\n      sending: false\n    }]);\n  }\n  return /*#__PURE__*/_jsxDEV(Thread, {\n    names: names,\n    sendName: sendName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 10\n  }, this);\n}\n_s3(SubmitForm, \"h+Lhhp2HsAgcHBBlQNyEvd9SWBw=\");\n_c3 = SubmitForm;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UsernameForm\");\n$RefreshReg$(_c2, \"Thread\");\n$RefreshReg$(_c3, \"SubmitForm\");","map":{"version":3,"names":["useOptimistic","useState","useRef","useFormStatus","jsxDEV","_jsxDEV","Fragment","_Fragment","UsernameForm","_s","pending","data","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","disabled","get","_c","deliverName","Promise","res","setTimeout","Thread","names","sendName","_s2","formRef","formAction","formData","_formRef$current","addOptimisticName","current","reset","optimisticNames","state","newName","text","sending","map","index","action","ref","placeholder","_c2","SubmitForm","_s3","setNames","key","sentName","_c3","$RefreshReg$"],"sources":["/Users/niwa_kazuhiro/Documents/PrivateDevelop/win-rate-react19/src/SubmitForm.tsx"],"sourcesContent":["import { useOptimistic, useState, useRef } from \"react\";\nimport {useFormStatus} from \"react-dom\";\n\nfunction UsernameForm() {\n  const { pending, data } = useFormStatus();\n\n  return (\n    <div>\n      <h3>Submit  Name: </h3>\n      <input type=\"text\" name=\"name\" disabled={pending} />\n      <button type=\"submit\" disabled={pending}>\n        Submit\n      </button>\n      <br />\n      <p>{data ? `Submitting ${data?.get(\"name\")}...` : \"\"}</p>\n    </div>\n  );\n}\n\n\n// deliverName関数の引数と戻り値の型を定義\n async function deliverName(name: string): Promise<string> {\n  await new Promise((res) => setTimeout(res, 1000));\n  return name;\n}\n\n// Threadコンポーネントのpropsに型を追加\ninterface NameItem {\n  text: string;\n  sending: boolean;\n  key?: number; // key はReact が自動的に生成するので、必須ではない\n}\n\ninterface ThreadProps {\n  names: NameItem[];\n  sendName: (formData: FormData) => Promise<void>;\n}\n\nfunction Thread({ names, sendName }: ThreadProps) {\n  const formRef = useRef<HTMLFormElement | null>(null);\n\n  // formActionの引数の型をFormDataに設定\n  async function formAction(formData: FormData): Promise<void> {\n    addOptimisticName(formData.get(\"name\") as string); // 名前を文字列として扱う\n    formRef.current?.reset();\n    await sendName(formData);\n  }\n\n  // optimisticNamesとaddOptimisticNameに型を付ける\n  const [optimisticNames, addOptimisticName] = useOptimistic<NameItem[], string>(\n    names,\n    (state, newName) => [\n      ...state,\n      {\n        text: newName,\n        sending: true,\n      },\n    ]\n  );\n\n  return (\n    <>\n      {optimisticNames.map((name, index) => (\n        <div key={index}>\n          {name.text}\n          {!!name.sending && <small> (Sending...)</small>}\n        </div>\n      ))}\n      <form action={formAction} ref={formRef}>\n        <input type=\"text\" name=\"name\" placeholder=\"Hello!\" />\n        <button type=\"submit\">Send</button>\n      </form>\n    </>\n  );\n}\n\n// SubmitForm  コンポーネントのstateとsendName関数の型を追加\nexport  function SubmitForm() {\n  const [names, setNames] = useState<NameItem[]>([\n    { text: \"Hello there!\", sending: false, key: 1 },\n  ]);\n\n  async function sendName(formData: FormData): Promise<void> {\n    const sentName = await deliverName(formData.get(\"name\") as string);\n    setNames((names) => [...names, { text: sentName, sending: false }]);\n  }\n\n  return <Thread names={names} sendName={sendName} />;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}