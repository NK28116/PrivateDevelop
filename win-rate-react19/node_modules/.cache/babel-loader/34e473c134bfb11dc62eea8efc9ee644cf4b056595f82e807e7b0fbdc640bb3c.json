{"ast":null,"code":"var _jsxFileName = \"/Users/niwa_kazuhiro/Documents/PrivateDevelop/win-rate-react19/src/SubmitForm.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { useFormStatus } from \"react-dom\";\nimport { useOptimistic } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function submitForm(name) {\n  // 実際の送信処理 (1秒の遅延シミュレーション)\n  await new Promise(res => setTimeout(res, 1000));\n  console.log(\"Form submitted with name:\", name.get(\"username\"));\n}\n\n// 名前登録フォーム\nfunction SubmitUserNameForm() {\n  _s();\n  const {\n    pending,\n    data\n  } = useFormStatus();\n\n  // フォーム送信中のデータを表示\n  const viewData = data === null || data === void 0 ? void 0 : data.get(\"username\");\n  console.log(\"data\", viewData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Request a Username: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      disabled: pending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: pending,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data ? `Requesting ${viewData}...` : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n// スレッドコンポーネント\n_s(SubmitUserNameForm, \"J/2Wr/H+PRkFQJ5+36sW4Xec7aE=\", false, function () {\n  return [useFormStatus];\n});\n_c = SubmitUserNameForm;\nfunction Thread({\n  name,\n  submitName\n}) {\n  _s2();\n  const [optimisticName, addOptimisticName] = useOptimistic(name, (state, submitName) => [...state, {\n    text: submitName,\n    sending: true\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [optimisticName.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [message.text, !!message.sending && /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \" (Sending...)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        submitName(formData);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Enter your username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n// 名前の送信と最適化された表示\n_s2(Thread, \"YycEJg5nvv19OqAIALssDr9fnT8=\", false, function () {\n  return [useOptimistic];\n});\n_c2 = Thread;\nfunction SubmitTable() {\n  _s3();\n  const [name, setName] = useState([{\n    text: \"Hello there!\",\n    sending: false,\n    key: 1\n  }]);\n\n  // 名前送信関数\n  async function submitName(formData) {\n    const newName = formData.get(\"username\");\n    setName(messages => [...messages, {\n      text: newName,\n      sending: true\n    }]);\n\n    // 名前を送信する非同期処理\n    await deliverName(newName);\n\n    // メッセージを更新して送信完了\n    setName(messages => messages.map(msg => msg.text === newName ? {\n      ...msg,\n      sending: false\n    } : msg));\n  }\n  return /*#__PURE__*/_jsxDEV(Thread, {\n    name: name,\n    submitName: submitName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 10\n  }, this);\n}\n\n// 名前送信をトリガーするフォーム\n_s3(SubmitTable, \"aXV4LChMnzcDXQt7P7DygASYEaI=\");\n_c3 = SubmitTable;\nfunction SubmitInput() {\n  _s4();\n  const ref = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    ref: ref,\n    action: async formData => {\n      await submitForm(formData);\n      ref.current.reset();\n    },\n    children: /*#__PURE__*/_jsxDEV(SubmitUserNameForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s4(SubmitInput, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\n_c4 = SubmitInput;\nasync function deliverName(username) {\n  // ここでサーバーへの送信処理を実装（仮の例）\n  console.log(\"Delivering username:\", username);\n  await new Promise(resolve => setTimeout(resolve, 1000)); // サーバー処理のシミュレーション\n}\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"SubmitUserNameForm\");\n$RefreshReg$(_c2, \"Thread\");\n$RefreshReg$(_c3, \"SubmitTable\");\n$RefreshReg$(_c4, \"SubmitInput\");","map":{"version":3,"names":["React","useState","useRef","useFormStatus","useOptimistic","jsxDEV","_jsxDEV","Fragment","_Fragment","submitForm","name","Promise","res","setTimeout","console","log","get","SubmitUserNameForm","_s","pending","data","viewData","children","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","_c","Thread","submitName","_s2","optimisticName","addOptimisticName","state","text","sending","map","message","index","onSubmit","e","preventDefault","formData","FormData","target","placeholder","_c2","SubmitTable","_s3","setName","key","newName","messages","deliverName","msg","_c3","SubmitInput","_s4","ref","action","current","reset","_c4","username","resolve","$RefreshReg$"],"sources":["/Users/niwa_kazuhiro/Documents/PrivateDevelop/win-rate-react19/src/SubmitForm.tsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useFormStatus } from \"react-dom\";\nimport { useOptimistic } from \"react\";\n\nasync function submitForm(name: FormData) {\n  // 実際の送信処理 (1秒の遅延シミュレーション)\n  await new Promise((res) => setTimeout(res, 1000));\n  console.log(\"Form submitted with name:\", name.get(\"username\"));\n}\n\n// 名前登録フォーム\nfunction SubmitUserNameForm() {\n  const { pending, data } = useFormStatus();\n\n  // フォーム送信中のデータを表示\n  const viewData = data?.get(\"username\");\n  console.log(\"data\", viewData);\n\n  return (\n    <div>\n      <h3>Request a Username: </h3>\n      <input type=\"text\" name=\"username\" disabled={pending} />\n      <button type=\"submit\" disabled={pending}>\n        Submit\n      </button>\n      <br />\n      <p>{data ? `Requesting ${viewData}...` : \"\"}</p>\n    </div>\n  );\n}\n\n// スレッドコンポーネント\nfunction Thread({ name, submitName }: { name: any[]; submitName: (formData: FormData) => void }) {\n  const [optimisticName, addOptimisticName] = useOptimistic(\n    name,\n    (state, submitName) => [\n      ...state,\n      {\n        text: submitName,\n        sending: true,\n      },\n    ]\n  );\n\n  return (\n    <>\n      {optimisticName.map((message, index) => (\n        <div key={index}>\n          {message.text}\n          {!!message.sending && <small> (Sending...)</small>}\n        </div>\n      ))}\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          const formData = new FormData(e.target as HTMLFormElement);\n          submitName(formData);\n        }}\n      >\n        <input type=\"text\" name=\"username\" placeholder=\"Enter your username\" />\n        <button type=\"submit\">Send</button>\n      </form>\n    </>\n  );\n}\n\n// 名前の送信と最適化された表示\nfunction SubmitTable() {\n  const [name, setName] = useState([\n    { text: \"Hello there!\", sending: false, key: 1 },\n  ]);\n\n  // 名前送信関数\n  async function submitName(formData: FormData) {\n    const newName = formData.get(\"username\") as string;\n    setName((messages) => [...messages, { text: newName, sending: true }]);\n\n    // 名前を送信する非同期処理\n    await deliverName(newName);\n\n    // メッセージを更新して送信完了\n    setName((messages) => messages.map((msg) =>\n      msg.text === newName ? { ...msg, sending: false } : msg\n    ));\n  }\n\n  return <Thread name={name} submitName={submitName} />;\n}\n\n// 名前送信をトリガーするフォーム\n function SubmitInput() {\n  const ref = useRef<HTMLFormElement>(null!);\n\n  return (\n    <form\n      ref={ref}\n      action={async (formData) => {\n        await submitForm(formData);\n        ref.current.reset();\n      }}\n    >\n      <SubmitUserNameForm />\n    </form>\n  );\n}\n\nasync function deliverName(username: string) {\n  // ここでサーバーへの送信処理を実装（仮の例）\n  console.log(\"Delivering username:\", username);\n  await new Promise((resolve) => setTimeout(resolve, 1000)); // サーバー処理のシミュレーション\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}