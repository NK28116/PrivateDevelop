{"ast":null,"code":"var _jsxFileName = \"/Users/niwa_kazuhiro/Documents/PrivateDevelop/win-rate-react19/src/SubmitForm.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport { useOptimistic, useState, useRef } from \"react\";\nimport { useFormStatus } from \"react-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function submitForm(query) {\n  await new Promise(res => setTimeout(res, 1000));\n}\n\n///placeHolder付き\nfunction SubmitNamePlaceHolder() {\n  _s();\n  const {\n    pending,\n    data\n  } = useFormStatus();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      disabled: pending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: pending,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data ? `Submitting ${data === null || data === void 0 ? void 0 : data.get(\"name\")}...` : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_s(SubmitNamePlaceHolder, \"J/2Wr/H+PRkFQJ5+36sW4Xec7aE=\", false, function () {\n  return [useFormStatus];\n});\n_c = SubmitNamePlaceHolder;\nexport function SubmitInput() {\n  _s2();\n  const ref = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    ref: ref,\n    action: async formData => {\n      await submitForm(formData);\n      ref.current.reset();\n    },\n    children: /*#__PURE__*/_jsxDEV(SubmitNamePlaceHolder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n// deliverName関数の引数と戻り値の型を定義\n_s2(SubmitInput, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\n_c2 = SubmitInput;\nasync function deliverName(name) {\n  await new Promise(res => setTimeout(res, 1000));\n  return name;\n}\n\n// Threadコンポーネントのpropsに型を追加\n\nfunction Thread({\n  names,\n  sendName\n}) {\n  _s3();\n  const formRef = useRef(null);\n\n  // formActionの引数の型をFormDataに設定\n  async function formAction(formData) {\n    var _formRef$current;\n    addOptimisticName(formData.get(\"name\")); // 名前を文字列として扱う\n    (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.reset();\n    await sendName(formData);\n  }\n\n  // optimisticNamesとaddOptimisticNameに型を付ける\n  const [optimisticNames, addOptimisticName] = useOptimistic(names, (state, newName) => [...state, {\n    text: newName,\n    sending: true\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [optimisticNames.map((name, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [name.text, !!name.sending && /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \" (Sending...)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 30\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: formAction,\n      ref: formRef,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Your Name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubmitNamePlaceHolder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n// AppコンポーネントのstateとsendName関数の型を追加\n_s3(Thread, \"vsyMHlx8E0bi7/LCNRey0yO3QRY=\", false, function () {\n  return [useOptimistic];\n});\n_c3 = Thread;\nexport function SubmitForm() {\n  _s4();\n  const [names, setNames] = useState([{\n    text: \"Submit Name List\",\n    sending: false,\n    key: 1\n  }]);\n  async function sendName(formData) {\n    const sentName = await deliverName(formData.get(\"name\"));\n    setNames(names => [...names, {\n      text: sentName,\n      sending: false\n    }]);\n  }\n  return /*#__PURE__*/_jsxDEV(Thread, {\n    names: names,\n    sendName: sendName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 7\n  }, this);\n}\n_s4(SubmitForm, \"kBydQ4FMB2kdXACe6uLSWawjVlo=\");\n_c4 = SubmitForm;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"SubmitNamePlaceHolder\");\n$RefreshReg$(_c2, \"SubmitInput\");\n$RefreshReg$(_c3, \"Thread\");\n$RefreshReg$(_c4, \"SubmitForm\");","map":{"version":3,"names":["useOptimistic","useState","useRef","useFormStatus","jsxDEV","_jsxDEV","Fragment","_Fragment","submitForm","query","Promise","res","setTimeout","SubmitNamePlaceHolder","_s","pending","data","children","type","name","disabled","fileName","_jsxFileName","lineNumber","columnNumber","get","_c","SubmitInput","_s2","ref","action","formData","current","reset","_c2","deliverName","Thread","names","sendName","_s3","formRef","formAction","_formRef$current","addOptimisticName","optimisticNames","state","newName","text","sending","map","index","placeholder","_c3","SubmitForm","_s4","setNames","key","sentName","_c4","$RefreshReg$"],"sources":["/Users/niwa_kazuhiro/Documents/PrivateDevelop/win-rate-react19/src/SubmitForm.tsx"],"sourcesContent":["import { useOptimistic, useState, useRef } from \"react\";\nimport { useFormStatus } from \"react-dom\";\n\nasync function submitForm(query:FormData) {\n    await new Promise((res) => setTimeout(res, 1000));\n}\n\n///placeHolder付き\nfunction SubmitNamePlaceHolder() {\n    const { pending, data } = useFormStatus();\n    return (\n        <div>\n            <input type=\"text\" name=\"name\" disabled={pending} />\n            <button type=\"submit\" disabled={pending}>\n                Submit\n            </button>\n            <br />\n            <p>{data ? `Submitting ${data?.get(\"name\")}...` : \"\"}</p>\n        </div>\n    );\n}\n\nexport  function SubmitInput() {\n    const ref = useRef<HTMLFormElement>(null!);\n    return (\n        <form\n            ref={ref}\n            action={async (formData) => {\n            await submitForm(formData);\n            ref.current.reset();\n            }}\n        >\n        <SubmitNamePlaceHolder />\n        </form>\n    );\n}\n\n// deliverName関数の引数と戻り値の型を定義\n async function deliverName(name: string): Promise<string> {\n  await new Promise((res) => setTimeout(res, 1000));\n  return name;\n}\n\n// Threadコンポーネントのpropsに型を追加\ninterface NameItem {\n  text: string;\n  sending: boolean;\n  key?: number; // key はReact が自動的に生成するので、必須ではない\n}\n\ninterface ThreadProps {\n  names: NameItem[];\n  sendName: (formData: FormData) => Promise<void>;\n}\n\nfunction Thread({ names, sendName }: ThreadProps) {\n  const formRef = useRef<HTMLFormElement | null>(null);\n\n  // formActionの引数の型をFormDataに設定\n  async function formAction(formData: FormData): Promise<void> {\n    addOptimisticName(formData.get(\"name\") as string); // 名前を文字列として扱う\n    formRef.current?.reset();\n    await sendName(formData);\n  }\n\n  // optimisticNamesとaddOptimisticNameに型を付ける\n  const [optimisticNames, addOptimisticName] = useOptimistic<NameItem[], string>(\n    names,\n    (state, newName) => [\n      ...state,\n      {\n        text: newName,\n        sending: true,\n      },\n    ]\n  );\n\n  return (\n    <>\n      {optimisticNames.map((name, index) => (\n        <div key={index}>\n          {name.text}\n          {!!name.sending && <small> (Sending...)</small>}\n        </div>\n      ))}\n      <form action={formAction} ref={formRef}>\n        <input type=\"text\" name=\"name\" placeholder=\"Your Name!\" />\n        <button type=\"submit\">Submit</button>\n        <SubmitNamePlaceHolder />\n      </form>\n    </>\n  );\n}\n\n// AppコンポーネントのstateとsendName関数の型を追加\nexport  function SubmitForm() {\n  const [names, setNames] = useState<NameItem[]>([\n    { text: \"Submit Name List\", sending: false, key: 1 },\n  ]);\n\n  async function sendName(formData: FormData): Promise<void> {\n    const sentName = await deliverName(formData.get(\"name\") as string);\n    setNames((names) => [...names, { text: sentName, sending: false }]);\n  }\n\n  return (\n      <Thread names={names} sendName={sendName} />\n\n      );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}